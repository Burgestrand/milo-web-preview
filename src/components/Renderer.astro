---
import ProgressBar from "./Renderer/ProgressBar.astro"
---

<div class="col-[feature] bg-shark-800 p-1 pb-0 relative">
	<div data-progress-overlay class="absolute inset-4 flex flex-col place-content-center place-items-center">
		<p class="text-white mb-2">Loading model...</p>

		<ProgressBar class="flex w-full max-w-xl" />
	</div>

	<canvas id="renderer-canvas" class="
		border-shark-400
		box-content w-full aspect-video
	">
		<p>Your browser does not support rendering the model.</p>
	</canvas>
</div>

<script>
	import Renderer from '@components/Renderer/Renderer'
	import type { RendererProgressEvent } from "./Renderer/Renderer"
	import ProgressBar from "./Renderer/ProgressBar/ProgressBar.ts"

	const progressBar = document.querySelector("progress-bar") as ProgressBar
	const canvas = document.querySelector("canvas")

	const renderer = new Renderer({
		model: "./CAD.glb",
		canvas
	})

	canvas.addEventListener("custom:progress", ({ detail: progressEvent }: RendererProgressEvent) => {
		if (progressEvent.lengthComputable) {
			const progress = (progressEvent.loaded / progressEvent.total) * 100
			progressBar.progress = progress
		} else {
			progressBar.progress = Math.random() * 100
		}
	})

	canvas.addEventListener("custom:loaded", ({ detail: progressEvent }: RendererProgressEvent) => {
		document.querySelector("[data-progress-overlay]").remove()
	})

	renderer.start()
</script>